public class Solution{

public void connect(TreeLinkNode root) {  
   TreeLinkNode first = root;  
   while (first != null) {  
     TreeLinkNode cur = first;  
     // set up next pointers for the next level  
     while (cur != null) {  
       // find the next node that has at least one child  
       TreeLinkNode next = cur.next;  
       while (next != null && next.left == null && next.right == null) next = next.next;  
       // the next child  
       TreeLinkNode nextChild = null;  
       if(next!=null) nextChild = (next.left != null) ? next.left : next.right;  
       // set up next pointers for the children of current node  
       if (cur.left != null && cur.right != null) {  
         cur.left.next = cur.right;  
         cur.right.next = nextChild;  
       } else if (cur.left != null) {  
         cur.left.next = nextChild;  
       } else if (cur.right != null) {  
         cur.right.next = nextChild;  
       }  
       // move to next has-child node  
       cur = next;  
     }  
     // move to next level  
     while (first != null && first.left == null && first.right == null) first = first.next;  
     if (first != null) first = (first.left != null) ? first.left : first.right;  
   }  
 }
}
